services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: vitoriamelo1/rodas:latest
    stdin_open: true
    tty: true
    command: /bin/bash -c "uv run --host; uv run manage.py makemigrations rodas --noinput; uv run manage.py migrate rodas --noinput; uv run manage.py  runserver --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.development
      - DB_PORT=5432
      - DB_HOST=db
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      mail:
        condition: service_started
    networks:
      - default

  db:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:-rodas}
      POSTGRES_PASSWORD: ${DB_PASS:-rodas}
      POSTGRES_DB: ${DB_NAME:-rodas}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-rodas}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5439:5432"
    networks:
      - default

  redis:
    image: redis:8.2-alpine
    restart: unless-stopped
    networks:
      - default

  mail:
    image: "maildev/maildev"
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - default

networks:
  default:
    driver: bridge
