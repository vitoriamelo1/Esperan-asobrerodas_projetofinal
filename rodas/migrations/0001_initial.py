# Generated by Django 5.2.5 on 2025-09-05 17:52

import django.core.validators
import django.db.models.deletion
import rodas.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Configuracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chave', models.CharField(max_length=100, unique=True, verbose_name='Chave')),
                ('valor', models.TextField(verbose_name='Valor')),
                ('descricao', models.CharField(blank=True, max_length=200, verbose_name='Descrição')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Configuração',
                'verbose_name_plural': 'Configurações',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Endereço de email único para login', max_length=254, unique=True, verbose_name='Email')),
                ('nome_completo', models.CharField(max_length=150, verbose_name='Nome Completo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se o usuário pode acessar o site de administração.', verbose_name='Membro da Equipe')),
                ('is_active', models.BooleanField(default=True, help_text='Designa se este usuário deve ser tratado como ativo. Desmarque esta opção ao invés de deletar contas.', verbose_name='Ativo')),
                ('tipo_usuario', models.CharField(choices=[('paciente', 'Paciente'), ('motorista', 'Motorista Voluntário'), ('admin', 'Administrador')], default='paciente', max_length=20, verbose_name='Tipo de Usuário')),
                ('telefone', models.CharField(help_text='Formato: (11) 99999-9999', max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('cpf', models.CharField(help_text='Formato: 000.000.000-00', max_length=14, unique=True, validators=[django.core.validators.RegexValidator('^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('endereco_completo', models.TextField(blank=True, verbose_name='Endereço Completo')),
                ('cidade', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=2, verbose_name='Estado')),
                ('cep', models.CharField(blank=True, help_text='Formato: 00000-000', max_length=9, validators=[django.core.validators.RegexValidator('^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('ativo', models.BooleanField(default=True, verbose_name='Usuário Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'abstract': False,
            },
            managers=[
                ('objects', rodas.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Motorista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca_veiculo', models.CharField(max_length=50, verbose_name='Marca do Veículo')),
                ('modelo_veiculo', models.CharField(max_length=50, verbose_name='Modelo do Veículo')),
                ('cor_veiculo', models.CharField(max_length=30, verbose_name='Cor do Veículo')),
                ('ano_veiculo', models.IntegerField(blank=True, null=True, verbose_name='Ano do Veículo')),
                ('placa_veiculo', models.CharField(blank=True, help_text='Formato: ABC-1234 ou ABC1D23', max_length=8, validators=[django.core.validators.RegexValidator('^[A-Z]{3}-?\\d{4}|[A-Z]{3}\\d[A-Z]\\d{2}$')], verbose_name='Placa do Veículo')),
                ('cnh_numero', models.CharField(blank=True, max_length=20, verbose_name='Número da CNH')),
                ('cnh_validade', models.DateField(blank=True, null=True, verbose_name='Validade da CNH')),
                ('status_aprovacao', models.CharField(choices=[('pendente', 'Cadastro em Análise'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('suspenso', 'Suspenso')], default='pendente', max_length=20, verbose_name='Status da Aprovação')),
                ('online', models.BooleanField(default=False, verbose_name='Motorista Online')),
                ('aceite_termos_voluntariado', models.BooleanField(default=False, verbose_name='Aceite dos Termos de Voluntariado')),
                ('data_aceite_termos', models.DateTimeField(blank=True, null=True, verbose_name='Data do Aceite dos Termos')),
                ('avaliacao_media', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3, verbose_name='Avaliação Média')),
                ('total_corridas', models.IntegerField(default=0, verbose_name='Total de Corridas Realizadas')),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True, verbose_name='Data da Aprovação')),
                ('observacoes_admin', models.TextField(blank=True, verbose_name='Observações da Administração')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_motorista', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Motorista',
                'verbose_name_plural': 'Motoristas',
            },
        ),
        migrations.CreateModel(
            name='Corrida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endereco_origem', models.TextField(verbose_name='Endereço de Origem')),
                ('latitude_origem', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitude Origem')),
                ('longitude_origem', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitude Origem')),
                ('endereco_destino', models.TextField(verbose_name='Endereço de Destino')),
                ('latitude_destino', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitude Destino')),
                ('longitude_destino', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitude Destino')),
                ('data_hora_agendada', models.DateTimeField(verbose_name='Data e Hora Agendada')),
                ('data_hora_aceite', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora do Aceite')),
                ('data_hora_inicio', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora do Início')),
                ('data_hora_chegada', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora da Chegada')),
                ('data_hora_finalizacao', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora da Finalização')),
                ('numero_passageiros', models.IntegerField(default=1, verbose_name='Número de Passageiros')),
                ('tem_acompanhante', models.BooleanField(default=False, verbose_name='Tem Acompanhante')),
                ('necessita_cadeira_rodas', models.BooleanField(default=False, verbose_name='Necessita Cadeira de Rodas')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aceita', 'Aceita'), ('em_andamento', 'Em Andamento'), ('motorista_chegou', 'Motorista Chegou'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('motivo_cancelamento', models.TextField(blank=True, verbose_name='Motivo do Cancelamento')),
                ('data_cancelamento', models.DateTimeField(blank=True, null=True, verbose_name='Data do Cancelamento')),
                ('cancelada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corridas_canceladas', to=settings.AUTH_USER_MODEL, verbose_name='Cancelada Por')),
                ('motorista', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corridas', to='rodas.motorista', verbose_name='Motorista')),
            ],
            options={
                'verbose_name': 'Corrida',
                'verbose_name_plural': 'Corridas',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('nova_corrida', 'Nova Corrida Disponível'), ('corrida_aceita', 'Corrida Aceita'), ('corrida_iniciada', 'Corrida Iniciada'), ('motorista_chegou', 'Motorista Chegou'), ('corrida_finalizada', 'Corrida Finalizada'), ('corrida_cancelada', 'Corrida Cancelada'), ('avaliacao_recebida', 'Avaliação Recebida'), ('aprovacao_motorista', 'Aprovação de Motorista'), ('sistema', 'Notificação do Sistema')], max_length=30, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('lida', models.BooleanField(default=False, verbose_name='Lida')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_leitura', models.DateTimeField(blank=True, null=True, verbose_name='Data da Leitura')),
                ('corrida', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='rodas.corrida', verbose_name='Corrida Relacionada')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel_nome', models.CharField(max_length=200, verbose_name='Nome do Responsável')),
                ('responsavel_cpf', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF do Responsável')),
                ('responsavel_telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone do Responsável')),
                ('necessita_cadeira_rodas', models.BooleanField(default=False, verbose_name='Necessita Cadeira de Rodas')),
                ('imunossuprimido', models.BooleanField(default=False, verbose_name='Paciente Imunossuprimido')),
                ('observacoes_medicas', models.TextField(blank=True, help_text='Informações importantes sobre necessidades especiais', verbose_name='Observações Médicas')),
                ('aceite_termos', models.BooleanField(default=False, verbose_name='Aceite dos Termos de Uso')),
                ('data_aceite_termos', models.DateTimeField(blank=True, null=True, verbose_name='Data do Aceite dos Termos')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.AddField(
            model_name='corrida',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corridas', to='rodas.paciente', verbose_name='Paciente'),
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_avaliacao', models.CharField(choices=[('paciente_avalia_motorista', 'Paciente Avalia Motorista'), ('motorista_avalia_paciente', 'Motorista Avalia Paciente')], max_length=30, verbose_name='Tipo de Avaliação')),
                ('nota', models.IntegerField(choices=[(1, '1 estrela'), (2, '2 estrelas'), (3, '3 estrelas'), (4, '4 estrelas'), (5, '5 estrelas')], verbose_name='Nota (1-5 estrelas)')),
                ('comentario', models.TextField(blank=True, verbose_name='Comentário')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Avaliação')),
                ('avaliado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_recebidas', to=settings.AUTH_USER_MODEL, verbose_name='Avaliado')),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_feitas', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
                ('corrida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='rodas.corrida', verbose_name='Corrida')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'unique_together': {('corrida', 'avaliador', 'tipo_avaliacao')},
            },
        ),
    ]
